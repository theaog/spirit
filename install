#!/usr/bin/env bash

if command -v apt-get &> /dev/null; then
    echo "Installing dependencies using apt..."
    DEBIAN_FRONTEND=noninteractive apt-get install -yqq \
		masscan
    	INSTALLER=(apt-get install -yqq)
elif command -v yum &> /dev/null; then # Redhat-based OS (Fedora, CentOS, RHEL)
    echo "Installing dependencies using yum..."
    yum -y install masscan
	INSTALLER=(yum -y)
elif command -v pacman &>/dev/null; then # Arch-based (Manjaro, Garuda, Blackarch)
	echo "Installing dependencies using pacman..."
	pacman --noconfirm -S masscan
    INSTALLER=(pacman --noconfirm -S)
else
    echo "Unsupported OS, exiting"
    exit
fi

# Verify if necessary tools are installed
for cmd in curl tar masscan; do
    if ! command -v "$cmd" &> /dev/null; then		
        echo "$cmd could not be found, installing..."
		"${INSTALLER[@]}" "$cmd"
    fi
done

TMP=spirit
mkdir -p $TMP || exit
cd "$TMP" || exit
echo "Running from $(pwd)"

# Get the CPU architecture
cpu_arch=$(uname -m)
echo "Fetching latest Spirit release URLs..."
ARTIFACTS=$(curl -s "https://api.github.com/repos/theaog/spirit/releases/latest" | awk -F '"' '/browser_download_url/{print $4}')
for URL in $ARTIFACTS
do
    case $cpu_arch in
        x86_64)
            echo "64-bit architecture detected (x86_64)."
            if [[ "$URL" == *"spirit.tgz"* ]]; then
                echo "Downloading $URL"
                curl --silent -L "$URL" --output "$(basename "$URL")"
            break
            fi
            ;;
        i386|i686)
            echo "32-bit architecture detected (x86)."
            if [[ "$URL" == *"spirit32.tgz"* ]]; then
                echo "Downloading $URL"
                curl --silent -L "$URL" --output "$(basename "$URL")"
            fi
            ;;
        aarch64)
            echo "64-bit ARM architecture detected (aarch64)."
            if [[ "$URL" == *"spirit-arm.tgz"* ]]; then
                echo "Downloading $URL"
                curl --silent -L "$URL" --output "$(basename "$URL")"
            fi
            ;;
        *)
            echo "Unknown architecture detected: $cpu_arch"
            # Add your fallback or default commands here
            ;;
    esac
done

ask_run_autobrute() {
    while true; do
        read -p "Do you want to run Spirit Autobrute? (yes/no): " yn
        case $yn in
            [Yy]* )
                echo "Running Spirit Autobrute..."
                tar xvf spirit*.tgz
                ./spirit autobrute --ports 22
                break
                ;;
            [Nn]* )
                echo "Enjoy!"
                break
                ;;
            * )
                echo "Please answer yes or no."
                ;;
        esac
    done
}

ask_run_autobrute

